<Window x:Class="ValueConverterSample.WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:valueConverters="clr-namespace:ValueConverters;assembly=ValueConverters"
        xmlns:viewModel="clr-namespace:ValueConverterSample.WPF.ViewModel"
        Title="ValueConverterSample.WPF" Height="240" Width="480">
    <Window.DataContext>
        <viewModel:MainViewModel/>
    </Window.DataContext>
    <Window.Resources>

        <Style x:Key="TrueStyleTemplate" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="LightGreen" />
        </Style>
        <Style x:Key="FalseStyleTemplate" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="MistyRose" />
        </Style>

        <valueConverters:BoolNegationConverter x:Key="BoolNegationConverter"/>
        <valueConverters:BoolToBrushConverter x:Key="BoolToBrushConverter" TrueValue="Magenta" FalseValue="Purple"/>
        <valueConverters:BoolToDoubleConverter x:Key="BoolToDoubleConverter" TrueValue="0" FalseValue="16"/>
        <valueConverters:BoolToFontWeightConverter x:Key="BoolToFontWeightConverter" TrueValue="Bold" FalseValue="Normal"/>
        <valueConverters:BoolToStringConverter x:Key="BoolToStringConverter" TrueValue="Yes" FalseValue="No"/>
        <valueConverters:BoolToStyleConverter x:Key="BoolToStyleConverter" TrueValue="{StaticResource TrueStyleTemplate}" FalseValue="{StaticResource FalseStyleTemplate}"/>
        <valueConverters:BoolToThicknessConverter x:Key="BoolToThicknessConverter" TrueValue="1" FalseValue="4"/>
        <valueConverters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <valueConverters:BoolToVisibilityConverter x:Key="BoolToInvertedVisibilityConverter" IsInverted="True"/>
        <valueConverters:DateTimeConverter x:Key="DateTimeConverter" Format="d" MinValueString="---"/>
        <valueConverters:DebugConverter x:Key="DebugConverter"/>
        <valueConverters:EnumToBoolConverter x:Key="EnumToBoolConverter"/>
        <valueConverters:EnumToObjectConverter x:Key="EnumToObjectConverter">
            <valueConverters:EnumToObjectConverter.Items>
                <ResourceDictionary>
                    <BitmapImage x:Key="Off" UriSource="/Resources/Images/stop.png" />
                    <BitmapImage x:Key="On" UriSource="/Resources/Images/play.png" />
                    <BitmapImage x:Key="Maybe" UriSource="/Resources/Images/pause.png" />
                </ResourceDictionary>
            </valueConverters:EnumToObjectConverter.Items>
        </valueConverters:EnumToObjectConverter>
        <valueConverters:EnumWrapperConverter x:Key="EnumWrapperConverter"/>
    </Window.Resources>

    <Border BorderBrush="{Binding IsEditing, Converter={StaticResource BoolToBrushConverter}}"
            BorderThickness="{Binding IsEditing, Converter={StaticResource BoolToThicknessConverter}}"
            CornerRadius="{Binding IsEditing, Converter={StaticResource BoolToDoubleConverter}}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Label Grid.Row="0" Grid.Column="0" Content="IsEnabled:"/>
            <Label Grid.Row="0" Grid.Column="1"
               Content="{Binding IsEnabled, Converter={StaticResource BoolToStringConverter}}"
               FontWeight="{Binding IsEnabled, Converter={StaticResource BoolToFontWeightConverter}}"
               Visibility="{Binding IsEditing, Converter={StaticResource BoolToInvertedVisibilityConverter}}"/>

            <CheckBox Grid.Row="0" Grid.Column="1" 
                  Content="{Binding IsEnabled, Converter={StaticResource BoolToStringConverter}}"
                  FontWeight="{Binding IsEnabled, Converter={StaticResource BoolToFontWeightConverter}}"
                  IsChecked="{Binding IsEnabled, Converter={StaticResource DebugConverter}}"
                  Visibility="{Binding IsEditing, Converter={StaticResource BoolToVisibilityConverter}}"/>

            <Label Grid.Row="1" Grid.Column="0" Content="ChangeDate:"/>
            <Label Grid.Row="1" Grid.Column="1"
               Content="{Binding ChangeDate, Converter={StaticResource DateTimeConverter}}"
               FontWeight="{Binding IsEnabled, Converter={StaticResource BoolToFontWeightConverter}}"
               Visibility="{Binding IsEditing, Converter={StaticResource BoolToInvertedVisibilityConverter}}"/>
            <TextBox Grid.Row="1" Grid.Column="1"
               Text="{Binding ChangeDate, Converter={StaticResource DateTimeConverter}}"
               FontWeight="{Binding IsEnabled, Converter={StaticResource BoolToFontWeightConverter}}"
               Visibility="{Binding IsEditing, Converter={StaticResource BoolToVisibilityConverter}}"/>

            <Label Grid.Row="2" Grid.Column="0" Content="Radio frequency:"/>
            <Label Grid.Row="2" Grid.Column="1"
               Content="{Binding SelectedRadioFrequency, Converter={StaticResource EnumWrapperConverter}}"
               FontWeight="{Binding IsEnabled, Converter={StaticResource BoolToFontWeightConverter}}"
                   Visibility="{Binding IsEditing, Converter={StaticResource BoolToInvertedVisibilityConverter}}"/>
            <ListBox Grid.Row="2" Grid.Column="1"
                     ItemsSource="{Binding RadioFrequencies}" 
                     SelectedItem="{Binding SelectedRadioFrequency}"
                     Visibility="{Binding IsEditing, Converter={StaticResource BoolToVisibilityConverter}}">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <RadioButton Content="{Binding LocalizedValue}" GroupName="Properties">
                            <RadioButton.IsChecked>
                                <Binding Path="IsSelected"
                                         RelativeSource="{RelativeSource AncestorType=ListBoxItem}"
                                         Mode="TwoWay"/>
                            </RadioButton.IsChecked>
                        </RadioButton>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <ContentPresenter />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
            <ComboBox Grid.Row="2" Grid.Column="2"
                      ItemsSource="{Binding RadioFrequencies}" 
                      SelectedItem="{Binding SelectedRadioFrequency}"
                      DisplayMemberPath="LocalizedValue"
                      Visibility="{Binding IsEditing, Converter={StaticResource BoolToVisibilityConverter}}"
                      Height="22"
                      VerticalAlignment="Top">
                <!--Alternatively, instead of using 'DisplayMemberPath' you could define an ItemTemplate:-->
                <!--<ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding LocalizedValue, Mode=OneWay}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>-->
            </ComboBox>

            <Label Grid.Row="3" Grid.Column="0" Content="Party mode:"/>
            <StackPanel Grid.Row="3" Grid.Column="1" Orientation="Horizontal">
                <Image Source="{Binding SelectedPartyMode, Converter={StaticResource EnumToObjectConverter}}"
                       Height="24" Stretch="Uniform"/>
                <Button Content="Next" 
                        Command="{Binding NextPartyModeCommand}"
                        Visibility="{Binding IsEditing, Converter={StaticResource BoolToVisibilityConverter}}"></Button>
                <Label Content="{Binding SelectedPartyMode, Converter={StaticResource EnumWrapperConverter}}"
                       FontWeight="{Binding IsEnabled, Converter={StaticResource BoolToFontWeightConverter}}"
                       Visibility="{Binding IsEditing, Converter={StaticResource BoolToInvertedVisibilityConverter}}"/>
                <ComboBox ItemsSource="{Binding PartyModes, Converter={StaticResource EnumWrapperConverter}}" 
                          SelectedItem="{Binding SelectedPartyMode, Converter={StaticResource EnumWrapperConverter}}"
                          DisplayMemberPath="LocalizedValue"
                          Visibility="{Binding IsEditing, Converter={StaticResource BoolToVisibilityConverter}}"
                          Height="22"
                          VerticalAlignment="Top">
                    <!--Alternatively, instead of using 'DisplayMemberPath' you could define an ItemTemplate:-->
                    <!--<ComboBox.ItemTemplate>
                        <DataTemplate>
                            <Label Content="{Binding LocalizedValue}" Margin="0" Padding="0"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>-->
                </ComboBox>
            </StackPanel>
          
            <Label Grid.Row="4" Grid.Column="0" Content="Language:"/>
            <Label Grid.Row="4" Grid.Column="1"
                   Content="{Binding SelectedLanguage.DisplayName}"
                   FontWeight="{Binding IsEnabled, Converter={StaticResource BoolToFontWeightConverter}}"
                   Visibility="{Binding IsEditing, Converter={StaticResource BoolToInvertedVisibilityConverter}}"/>
            <ComboBox Grid.Row="4" Grid.Column="1"
                      ItemsSource="{Binding Languages}" 
                      SelectedItem="{Binding SelectedLanguage, Mode=TwoWay}"
                      DisplayMemberPath="DisplayName"
                      Visibility="{Binding IsEditing, Converter={StaticResource BoolToVisibilityConverter}}"
                      Height="22"
                      VerticalAlignment="Top"/>
            
            <Button Grid.Row="5" Grid.Column="1" Width="100" HorizontalAlignment="Right"
                    Content="Edit" 
                    Command="{Binding EditCommand}"
                    Style="{Binding IsEditing, Converter={StaticResource BoolToStyleConverter}}"
                    IsEnabled="{Binding IsEditing, Converter={StaticResource BoolNegationConverter}}"
                    BorderThickness="{Binding IsEditing, Converter={StaticResource BoolToThicknessConverter}}"/>

            <Button Grid.Row="5" Grid.Column="2" Width="100" HorizontalAlignment="left" Margin="16,0,0,0"
                    Content="Cancel" 
                    Command="{Binding CancelCommand}"
                    Style="{Binding IsEditing, Converter={StaticResource BoolToStyleConverter}}"
                    IsEnabled="{Binding IsEditing}"/>
        </Grid>
    </Border>
</Window>
